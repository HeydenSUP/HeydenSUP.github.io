html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden; /* keep the viewport fixed; no scrollbars */
  font-family: Helvetica, Arial, sans-serif;
  background: linear-gradient(#7dd3fc, #1e3a8a); /* Scene 1: calm ocean */
  color: white;
  transition: background 2s ease; /* smooth gradient transition when scene changes */
}

/* The wrapper keeps everything centered and layered */
#wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  text-align: center;
}

/* Titles and scene description text */
#sceneTitle {
  font-size: 2.5em;
  margin-top: 40px;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4);
}

#sceneDesc {
  font-size: 1.2em;
  width: 60%;
  margin: 20px auto;
  line-height: 1.6;
}

/* Buttons for interactivity */
#choices button {
  background: rgba(255, 255, 255, 0.2);
  border: 2px solid white;
  color: white;
  font-size: 1.1em;
  padding: 10px 18px;
  margin: 10px;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
}

#choices button:hover {
  background: white;
  color: #0c4a6e;
  transform: scale(1.1);
}

/*  SCENE STRUCTURE */

#scene {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden; /* contain bubbles and fragments */
}

/* The submarine container is centered using translate */
#submarine {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 160px;
  height: 80px;
  z-index: 5; /* always above bubbles but below text */
  transition: transform 1s ease;
}

/* The yellow main body */
#submarine .body {
  position: absolute;
  width: 100%;
  height: 100%;
  background: #ffd84b; /* bright yellow body */
  border-radius: 40px; /* round shape */
  box-shadow: inset -5px 0 0 rgba(0, 0, 0, 0.2);
}

/* The submarine window (cute circular viewport) */
#submarine .window {
  position: absolute;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: #6ec6ff;
  top: 25px;
  left: 50px;
  border: 3px solid #ffffff;
  box-shadow: 0 0 10px rgba(0, 200, 255, 0.6);
}

/* The tail fin â€” small triangle to the right */
#submarine .tail {
  position: absolute;
  right: -20px;
  top: 25px;
  width: 0;
  height: 0;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent;
  border-left: 20px solid #ffd84b; /* triangle facing right */
}

/* Submarine light (used in deeper scenes) */
#submarine .light {
  position: absolute;
  width: 20px;
  height: 20px;
  background: radial-gradient(
    circle,
    rgba(255, 255, 204, 0.9),
    rgba(255, 255, 153, 0.1)
  );
  border-radius: 50%;
  bottom: 15px;
  left: 10px;
  opacity: 0; /* turned off in Scene 1 */
  transition: opacity 1s ease;
}

/* Submarine gently dives downward */
.diveAnim {
  animation: diveMotion 5s infinite ease-in-out alternate;
}

@keyframes diveMotion {
  0% {
    transform: translate(-50%, -48%);
  }
  100% {
    transform: translate(-50%, -52%);
  }
}

/* Submarine shakes (used for Break Through) */
.shakeAnim {
  animation: shakeMotion 0.5s infinite;
}

@keyframes shakeMotion {
  0%,
  100% {
    transform: translate(-50%, -50%);
  }
  25% {
    transform: translate(-50%, -48%);
  }
  50% {
    transform: translate(-50%, -52%);
  }
  75% {
    transform: translate(-50%, -49%);
  }
}

/* Submarine ascends smoothly toward the top */
.ascendAnim {
  animation: ascendMotion 4s forwards ease-in-out;
}

@keyframes ascendMotion {
  0% {
    transform: translate(-50%, -50%);
  }
  100% {
    transform: translate(-50%, -80%);
  }
}

/*
   The monster is a dark semicircle at the bottom of the screen,
   with tentacle-like shapes waving slowly to simulate underwater motion.
*/
#monster {
  position: absolute;
  bottom: -80px;
  left: 50%;
  transform: translateX(-50%);
  width: 300px;
  height: 150px;
  background: radial-gradient(circle at center, #222 0%, #000 80%);
  border-radius: 50% 50% 0 0;
  opacity: 0;
  z-index: 1;
  animation: monsterFloat 6s ease-in-out infinite;
}

/* Slight floating movement to keep monster alive */
@keyframes monsterFloat {
  0%,
  100% {
    transform: translate(-50%, 0);
  }
  50% {
    transform: translate(-50%, -10px);
  }
}

/* Tentacle lines using pseudo-elements */
#monster::before,
#monster::after {
  content: "";
  position: absolute;
  width: 300px;
  height: 150px;
  top: 0;
  left: 0;
  background: repeating-linear-gradient(
    90deg,
    transparent 0,
    transparent 15px,
    rgba(0, 0, 0, 0.6) 20px
  );
  animation: tentacleWave 8s linear infinite;
}

/* Tentacle movement waves horizontally */
@keyframes tentacleWave {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-20px);
  }
}

/*  BUBBLES  */

/*
   Bubbles are dynamically generated by JS,
   but their visual properties are defined here.
*/
.bubble {
  position: absolute;
  bottom: 0;
  background: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  animation: bubbleRise 6s linear infinite;
}

/* Vertical movement + fade */
@keyframes bubbleRise {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(-110vh);
    opacity: 0;
  }
}

/*
   Each fragment is created by JS in stayStill() and flies outward.
   We add a soft blur and small shadow for realism.
*/
.subFragment {
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
  filter: brightness(1.1);
}

/* TRANSITION OVERLAY */

/*
   A full-screen overlay used for scene fading.
   JS toggles its opacity to create smooth transitions.
*/
#transition {
  position: absolute;
  width: 100%;
  height: 100%;
  background: black;
  top: 0;
  left: 0;
  opacity: 0;
  z-index: 100;
  transition: opacity 1s ease;
}

/*  END OF FILE  */
